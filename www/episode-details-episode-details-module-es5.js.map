{"version":3,"sources":["src/app/pages/episode-details/episode-details.page.html","src/app/pages/episode-details/episode-details-routing.module.ts","src/app/pages/episode-details/episode-details.module.ts","src/app/pages/episode-details/episode-details.page.scss","src/app/pages/episode-details/episode-details.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!--   Title:  Week 7: Storing Data inside Ionic Apps\\n      Author: Mikhail Timofeev\\n     Date: 30/March/2020\\n     Availability: https://mikhail-cct.github.io/mobdev/wk7/#/13\\n     -->\\n\\n<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\n\\t\\t\\t<!-- button that gets the user back to the episodes page if clicked -->\\n\\n\\t\\t\\t<ion-back-button defaulthref=\\\"/tabs/episodes\\\"></ion-back-button>\\n\\n\\t\\t\\t<ion-title> Episode Details </ion-title>\\n\\n<!-- Button with the fuction to mark a episode as favourite, by default is false and if click\\nthe button will indicate that the episode is liked -->\\n\\t\\t\\t<ion-button (click)=\\\"unfavouriteEpisode()\\\" *ngIf=\\\"isFavourite\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"thumbs-down-outline\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\n             <!--If the episode is marked as favourite and click on this button\\n            the episode will get marked as unfavourite  -->\\n\\t\\t\\t<ion-button (click)=\\\"favouriteEpisode()\\\" *ngIf=\\\"!isFavourite\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"thumbs-up-outline\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-buttons>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<!--Content of the page, it will show the episode details as \\nepisode number, title, season, air data and characters, the \\n*ngIf indicates that this data will be showed if a episode element is found  --\\n-->\\n<ion-content>\\n\\n\\t<ion-card *ngIf=\\\"episode\\\">\\n\\t\\t<ion-card-content>\\n\\t\\t\\t<ion-list>\\n\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<ion-label> Episode Number </ion-label>\\n\\t\\t\\t\\t\\t{{ episode.episode }}\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<ion-label> Title </ion-label>\\n\\t\\t\\t\\t\\t{{ episode.title }}\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<ion-label> Season </ion-label>\\n\\t\\t\\t\\t\\t{{ episode.season }}\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<ion-label> Air Data </ion-label>\\n\\t\\t\\t\\t\\t{{ episode.air_date }}\\n\\t\\t\\t\\t</ion-item>\\n\\n\\n\\t\\t\\t\\t<ion-item>\\n\\t\\t\\t\\t\\t<ion-label> Characters </ion-label>\\n\\t\\t\\t\\t\\t{{ episode.characters }}\\n\\t\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t</ion-list>\\n\\t\\t</ion-card-content>\\n\\t</ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EpisodeDetailsPage } from './episode-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EpisodeDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EpisodeDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EpisodeDetailsPageRoutingModule } from './episode-details-routing.module';\n\nimport { EpisodeDetailsPage } from './episode-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EpisodeDetailsPageRoutingModule\n  ],\n  declarations: [EpisodeDetailsPage]\n})\nexport class EpisodeDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VwaXNvZGUtZGV0YWlscy9lcGlzb2RlLWRldGFpbHMucGFnZS5zY3NzIn0= */\"","import { FavouriteService } from './../../services/favourite.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n    selector: 'app-episode-details',\n    templateUrl: './episode-details.page.html',\n    styleUrls: ['./episode-details.page.scss'],\n})\nexport class EpisodeDetailsPage implements OnInit {\n\n    episode: any;\n    episodeId = null;\n    isFavourite = false;\n\n    constructor(private activatedRoute: ActivatedRoute,\n        private api: ApiService, private favouriteService: FavouriteService) { }\n\n\n    ngOnInit() {\n        this.episodeId = this.activatedRoute.snapshot.paramMap.get('id');\n\n        this.api.getEpisode(this.episodeId).subscribe(res => {\n            this.episode = res[0];\n            console.log(JSON.stringify(this.episode.episode_id));\n        });\n\n\n        this.favouriteService.isFavouriteEp(this.episodeId).then(isFav => {\n            this.isFavourite = isFav;\n        });\n    }\n\n    favouriteEpisode() {\n        this.favouriteService.favouriteEpisode(this.episodeId).then(() => {\n            this.isFavourite = true;\n        });\n    }\n\n    unfavouriteEpisode() {\n        this.favouriteService.unfavouriteEpisode(this.episodeId).then(() => {\n            this.isFavourite = false;\n        });\n    }\n}\n\n"],"sourceRoot":"webpack:///","file":"episode-details-episode-details-module-es5.js"}