{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-ccbda579.js","./node_modules/@ionic/core/dist/esm/index-729ec402.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./src/app/pipes/deathsfilter.pipe.ts","./src/app/pipes/filter.pipe.ts","./src/app/pipes/pipes.module.ts","./src/app/services/api.service.ts","./src/app/services/favourite.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiH;;;;;;;;;;;;;AC3CjH;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;;;;;;;;;;;;AC/GlC;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAA;AAAA;AAAA;AAAA;;;;GAIG;;AAEiD;AAGpD,oGAAoG;AAIpG,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IACzB,gHAAgH;IAGhH,SAAS,CAAC,MAAa,EAAE,OAAe;QACpC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEpB,4DAA4D;QAC5D,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO,MAAM,CAAC;S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","file":"common-es2015.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n    try {\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        const documentFragment = document.createDocumentFragment();\n        const workingDiv = document.createElement('div');\n        documentFragment.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach(blockedTag => {\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                const element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                const childElements = getElementChildren(element);\n                /* tslint:disable-next-line */\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        const dfChildren = getElementChildren(documentFragment);\n        /* tslint:disable-next-line */\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n            sanitizeElement(dfChildren[childIndex]);\n        }\n        // Append document fragment to div\n        const fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment);\n        // First child is always the div we did our work in\n        const getInnerDiv = fragmentDiv.querySelector('div');\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nconst sanitizeElement = (element) => {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\n        const attribute = element.attributes.item(i);\n        const attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        const attributeValue = attribute.value;\n        /* tslint:disable-next-line */\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n            element.removeAttribute(attributeName);\n        }\n    }\n    /**\n     * Sanitize any nested children\n     */\n    const childElements = getElementChildren(element);\n    /* tslint:disable-next-line */\n    for (let i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nconst getElementChildren = (el) => {\n    return (el.children != null) ? el.children : el.childNodes;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","/**  Title: ionic 4+: Search Bar - Módulos - Filtros\n*    Author:     Fernando Herrera \n*    Date: 18 mar. 2019\n*    Availability: https://www.youtube.com/watch?v=T5pdU0s4J6w&t=1994s\n**/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Quote } from '@angular/compiler';\n\n//Creation of pipe called filter, it will be used to filter and search the data from the deaths page\n@Pipe({\n    name: 'deathsfilter'\n})\nexport class DeathsfilterPipe implements PipeTransform {\n    //PipeTransform is an interface that uses pipes, this pipes take data and transform it into to a desired output.\n\n\n    transform(deaths: any[], keyword: String): any[] {\n        console.log(deaths);\n\n        //if the variable is empty it will return the list of deaths\n        if (keyword.length === 0) { return deaths; }\n\n        //this fuction convert the text typed by the user and convert it in lowercase\n        keyword = keyword.toLocaleLowerCase();\n\n        //this fuction will search the input in the death variable and \n        //will return the result of the filtering the input in the array\n        return deaths.filter(death => {\n            return death.death.toLocaleLowerCase().includes(keyword);\n\n            //show the result in the console\n            // console.log(keyword);\n        });\n\n    }\n\n}\n","/**  Title: ionic 4+: Search Bar - Módulos - Filtros\n*    Author:     Fernando Herrera \n*    Date: 18 mar. 2019\n*    Availability: https://www.youtube.com/watch?v=T5pdU0s4J6w&t=1994s\n**/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Quote } from '@angular/compiler';\n\n//Creation of pipe called filter, it will be used to filter and search the data from the quotes page\n@Pipe({\n    name: 'filter'\n})\n\nexport class FilterPipe implements PipeTransform {\n    //PipeTransform is an interface that uses pipes, this pipes take data and transform it into to a desired output.\n\n    transform(quotes: any[], search: String): any[] {\n\n        //show the result in the console\n        // console.log(quotes);\n\n        //if the variable is empty it will return the list of quotes\n        if (search.length === 0) { return quotes; }\n\n        //this fuction convert the text typed by the user and convert it in lowercase\n        search = search.toLocaleLowerCase();\n\n        //this fuction will search the input in the quote and in the author variables and \n        //will return the result of the filtering the input in the array\n        return quotes.filter(quote => {\n            return quote.quote.toLocaleLowerCase().includes(search) ||\n                quote.author.toLocaleLowerCase().includes(search);\n\n\n            //show the result in the console\n            // console.log(search);\n        });\n\n    }\n\n}","/**  Title: ionic 4+: Search Bar - Módulos - Filtros\n*    Author:     Fernando Herrera \n*    Date: 18 mar. 2019\n*    Availability: https://www.youtube.com/watch?v=T5pdU0s4J6w&t=1994s\n**/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterPipe } from './filter.pipe';\nimport { DeathsfilterPipe } from './deathsfilter.pipe';\n\n\n//To be able of use the pipe module we need to import the pipes that we create into this page\n//The pipes created are FilterPipe and DeathsfilterPipe\n//To make posible that the app can interact with these pipes it is neccesary to export them\n@NgModule({\n    declarations: [FilterPipe, DeathsfilterPipe],\n    exports: [FilterPipe, DeathsfilterPipe]\n})\nexport class PipesModule { }\n\n\n","/**  Title:  Week9 (Ap 13- Ap 19)\n*    Author: Mikhail Timofeev\n*    Date: 14/April/2020\n*    Availability: https://drive.google.com/file/d/1DtBAlEWYf28XwlT0eEHIsYc8D0DKLz3Q/view?usp=sharing\n**/\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n    constructor(private http: HttpClient) {\n    }\n    //Method to get the Episodes data from the API\n    getEpisodes() {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes`);\n    }\n\n    //Method to get the Episode by the ID from the API\n    getEpisode(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes/${id}`);\n    }\n\n\n    //Method to get the  list of characters and the offset from the API\n    getCharacters(offset) {\n        return this.http.get(`https://www.breakingbadapi.com/api/characters?limit=20&offset=${offset}`)\n\n    }\n\n    //Method to get the characters by ID from the API\n    getCharacter(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/characters/${id}`);\n\n    }\n    //Method to get the  list of Quotes from the API\n    getQuotes() {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes`);\n    }\n\n    //Method to get the  Quotes by ID  from the API\n    getQuote(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes/${id}`);\n\n    }\n    //Method to get the  list of Deaths  from the API\n    getDeaths() {\n        return this.http.get(`https://www.breakingbadapi.com/api/deaths`)\n    }\n\n\n\n}","/**  Title:  Week 7: Storing Data inside Ionic Apps\n*    Author: Mikhail Timofeev\n*    Date: 31/March/2020\n*    Availability: https://mikhail-cct.github.io/mobdev/wk7/#/13\n**/\n\n// Service to store the state of the episodes and characters marked as favourite\n\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n//Create variables to store the state of the favourite Episode and character\nconst STORAGE_KEYEpi = 'favouriteEpisodes';\nconst STORAGE_KEYChar = 'favouriteCharacteres';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FavouriteService {\n    constructor(private storage: Storage) { }\n\n    // Method that returns all the episodes marked as favourite \n    getAllFavouriteEpisodes() {\n        return this.storage.get(STORAGE_KEYEpi);\n    }\n\n    //Method to store the id of the episode marked as favourite\n    isFavouriteEp(episodeId) {\n        return this.getAllFavouriteEpisodes().then(result => {\n            return result && result.indexOf(episodeId) !== -1;\n        });\n    }\n\n    //Method to mark the id of the episode as favourite\n    favouriteEpisode(episodeId) {\n        return this.getAllFavouriteEpisodes().then(result => {\n            if (result) {\n                result.push(episodeId);\n                return this.storage.set(STORAGE_KEYEpi, result);\n            } else {\n                return this.storage.set(STORAGE_KEYEpi, [episodeId]);\n            }\n        });\n    }\n\n    //If the episode is alreade marked as favourite so unmark \n    unfavouriteEpisode(episodeId) {\n        return this.getAllFavouriteEpisodes().then(result => {\n            if (result) {\n                var index = result.indexOf(episodeId);\n                result.splice(index, 1);\n                return this.storage.set(STORAGE_KEYEpi, result);\n            }\n\n        });\n    }\n\n    // Method that returns all the characters marked as favourite \n    getAllFavouriteCharacteres() {\n        return this.storage.get(STORAGE_KEYChar);\n    }\n\n    //Method to store the id of the character marked as favourite\n    isFavouriteChar(characterId) {\n        return this.getAllFavouriteCharacteres().then(result => {\n            return result && result.indexOf(characterId) !== -1;\n        });\n    }\n\n    //Method to mark the id of the character as favourite\n    favouriteCharacter(characterId) {\n        return this.getAllFavouriteCharacteres().then(result => {\n            if (result) {\n                result.push(characterId);\n                return this.storage.set(STORAGE_KEYChar, result);\n            } else {\n                return this.storage.set(STORAGE_KEYChar, [characterId]);\n            }\n        });\n    }\n\n    //If the episode is alreade marked as favourite so unmark \n    unfavouriteCharacter(characterId) {\n        return this.getAllFavouriteCharacteres().then(result => {\n            if (result) {\n                var index = result.indexOf(characterId);\n                result.splice(index, 1);\n                return this.storage.set(STORAGE_KEYChar, result);\n            }\n\n        });\n\n    }\n}\n\n"],"sourceRoot":"webpack:///"}