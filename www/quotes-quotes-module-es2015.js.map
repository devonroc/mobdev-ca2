{"version":3,"sources":["./src/app/pages/quotes/quotes.page.html","./src/app/pages/quotes/quotes-routing.module.ts","./src/app/pages/quotes/quotes.module.ts","./src/app/pages/quotes/quotes.page.scss","./src/app/pages/quotes/quotes.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,y0CAA0wC,eAAe,iEAAiE,eAAe,8E;;;;;;;;;;;;;;;;;;;ACA/0C;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAMF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBK;AACM;AACF;AAEA;AAEqB;AAEvB;AACc;AAYzD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAV5B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,8EAAuB;YACvB,sEAAW;SACZ;QACD,YAAY,EAAE,CAAC,uDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;ACrB7B;AAAe,6GAA8C,+I;;;;;;;;;;;;ACA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;GAIG;;AAE+C;AACM;AACf;AAUzC,IAAa,UAAU,GAAvB,MAAa,UAAU;IAYnB,YAAoB,MAAc,EAAU,GAAe;QAAvC,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;QAL3D,iEAAiE;QACjE,cAAS,GAAU,EAAE,CAAC;QACtB,mGAAmG;QACnG,aAAQ,GAAG,EAAE,CAAC;IAGd,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,8BAA8B;QAE9B,sCAAsC;QACtC,gEAAgE;QAChE,MAAM;IAEV,CAAC;IAED,8EAA8E;IAC9E,4EAA4E;IAC5E,UAAU;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACzB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC;YACxB,sBAAsB;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sEAAsE;IACtE,4DAA4D;IAC5D,WAAW,CAAC,KAAK;QACb,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,4DAA4D;QAG5D,iCAAiC;QACjC,qBAAqB;IACzB,CAAC;IAED,iFAAiF;IACjF,WAAW,CAAC,MAAM;QACd,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,QAAQ,EAAE,CAAC,CAAC;IAC1D,CAAC;CACJ;;YAzC+B,sDAAM;YAAe,gEAAU;;AAZlD,UAAU;IALtB,+DAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,kNAAiC;;KAEpC,CAAC;2EAa8B,sDAAM,EAAe,gEAAU;GAZlD,UAAU,CAqDtB;AArDsB","file":"quotes-quotes-module-es2015.js","sourcesContent":["export default \"<!--   Title:  Week9 (Ap 13- Ap 19)\\n      Author: Mikhail Timofeev\\n     Date: 14/April/2020\\n     Availability: https://drive.google.com/file/d/1DtBAlEWYf28XwlT0eEHIsYc8D0DKLz3Q/view?usp=sharing\\n-->\\n\\n<!-- HTML code for Quotes web page-->\\n\\n<ion-header>\\n\\t<!-- Tool bar with the title of the web page-->\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Breaking Bad Quotes</ion-title>\\n\\t\\t<ion-searchbar placeholder=\\\"Search Quotes\\\" animated (ionChange)=\\\"searchQuote($event)\\\">\\n\\t\\t</ion-searchbar>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<!-- Content of the web page, here is shown a list of the\\nquotes it includes a fuction onclick that opens a second page with the details about the \\n selected quote,  the attributes quote and author are taken from the API https://www.breakingbadapi.com/  -->\\n\\n<!-- *ngForIt to iterate data within array datatype-->\\n<!-- async works only with observable variables, it used usually to charge async data from APIS-->\\n<!-- The pipe filter is used to do the search fuction -->\\n\\n<ion-content>\\n\\t<ion-list>\\n\\t\\t<ion-card button detail lines=\\\"inset\\\" *ngFor=\\\"let quote of quotes | async | filter: mySearch\\\"\\n\\t\\t\\t(click)=\\\"openDetails(quote)\\\">\\n\\t\\t\\t<ion-card-title>\\n\\t\\t\\t\\t<ion-icon name=\\\"bookmark-outline\\\"></ion-icon>\\n\\t\\t\\t\\t{{ quote.quote }}\\n\\t\\t\\t</ion-card-title>\\n\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t{{ quote.author}}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t</ion-list>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuotesPage } from './quotes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\n\nimport { QuotesPage } from './quotes.page';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuotesPageRoutingModule,\n    PipesModule\n  ],\n  declarations: [QuotesPage]\n})\nexport class QuotesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3Rlcy9xdW90ZXMucGFnZS5zY3NzIn0= */\"","/**  Title: ionic 4+: Search Bar - MÃ³dulos - Filtros\n*    Author:     Fernando Herrera \n*    Date: 18 mar. 2019\n*    Availability: https://www.youtube.com/watch?v=T5pdU0s4J6w&t=1994s\n**/\n\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n\n@Component({\n    selector: 'app-quotes',\n    templateUrl: './quotes.page.html',\n    styleUrls: ['./quotes.page.scss'],\n})\nexport class QuotesPage implements OnInit {\n\n    //Declaration of the variables that will be used in the class  \n    //quotes is the variable where the elements from the API will be stored\n    quotes: Observable<any>;\n    //quotesId will be the variable to store the Id of each quote\n    quotesId: Observable<any>;\n    //in the array quoteItem the quotes will be stored in a new array\n    quoteItem: any[] = [];\n    //mySearch is the variable where the input from the user will be stored when a search is being done\n    mySearch = '';\n\n    constructor(private router: Router, private api: ApiService, /*private filter: FilterPipe*/) {\n    }\n\n    ngOnInit() {\n        this.loadQuotes();\n        //initialize loadDeaths Method\n\n        // this.quotes = this.api.getQuotes();\n        // this.quotes.subscribe(data => {console.log('my data' , data);\n        // });\n\n    }\n\n    //The method will call the elements from the getCharacters method declared in \n    //the api service and will store these elements in an array called quoteItem\n    loadQuotes() {\n        this.quotes = this.api.getQuotes();\n        this.quotes.subscribe(data => {\n            this.quoteItem = [data];\n            //console.log( data); \n        });\n    }\n\n    //In this method the attribute event will be taken to start the search\n    // according with what is written by the user in the search \n    searchQuote(event) {\n        const text = event.target.value;\n        this.mySearch = text;\n\n        //return(text.toLowerCase().indexOf(text.toLowerCase())>-1);\n\n\n        //show the results in the console\n        // console.log(text);\n    }\n\n    //Method to go to the details page of the quote selected by the user with a click\n    openDetails(quotes) {\n        let quotesId = quotes.quote_id;\n        this.router.navigateByUrl(`/tabs/quotes/${quotesId}`);\n    }\n}\n"],"sourceRoot":"webpack:///"}