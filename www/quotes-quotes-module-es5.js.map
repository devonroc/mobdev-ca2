{"version":3,"sources":["src/app/pages/quotes/quotes.page.html","src/app/pages/quotes/quotes-routing.module.ts","src/app/pages/quotes/quotes.module.ts","src/app/pages/quotes/quotes.page.scss","src/app/pages/quotes/quotes.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!--   Title:  Week9 (Ap 13- Ap 19)\\n      Author: Mikhail Timofeev\\n     Date: 14/April/2020\\n     Availability: https://drive.google.com/file/d/1DtBAlEWYf28XwlT0eEHIsYc8D0DKLz3Q/view?usp=sharing\\n-->\\n\\n<!-- HTML code for Quotes web page-->\\n\\n<ion-header>\\n\\t<!-- Tool bar with the title of the web page-->\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Breaking Bad Quotes</ion-title>\\n\\t\\t<ion-searchbar placeholder=\\\"Search Quotes\\\" animated (ionChange)=\\\"searchQuote($event)\\\">\\n\\t\\t</ion-searchbar>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<!-- Content of the web page, here is shown a list of the\\nquotes it includes a fuction onclick that opens a second page with the details about the \\n selected quote,  the attributes quote and author are taken from the API https://www.breakingbadapi.com/  -->\\n\\n<!-- *ngForIt to iterate data within array datatype-->\\n<!-- async works only with observable variables, it used usually to charge async data from APIS-->\\n<!-- The pipe filter is used to do the search fuction -->\\n\\n<ion-content>\\n\\t<ion-list>\\n\\t\\t<ion-card button detail lines=\\\"inset\\\" *ngFor=\\\"let quote of quotes | async | filter: mySearch\\\"\\n\\t\\t\\t(click)=\\\"openDetails(quote)\\\">\\n\\t\\t\\t<ion-card-title>\\n\\t\\t\\t\\t<ion-icon name=\\\"bookmark-outline\\\"></ion-icon>\\n\\t\\t\\t\\t{{ quote.quote }}\\n\\t\\t\\t</ion-card-title>\\n\\n\\t\\t\\t<ion-card-content>\\n\\t\\t\\t\\t{{ quote.author}}\\n\\t\\t\\t</ion-card-content>\\n\\t\\t</ion-card>\\n\\t</ion-list>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuotesPage } from './quotes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\n\nimport { QuotesPage } from './quotes.page';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuotesPageRoutingModule,\n    PipesModule\n  ],\n  declarations: [QuotesPage]\n})\nexport class QuotesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3Rlcy9xdW90ZXMucGFnZS5zY3NzIn0= */\"","/**  Title: ionic 4+: Search Bar - MÃ³dulos - Filtros\n*    Author:     Fernando Herrera \n*    Date: 18 mar. 2019\n*    Availability: https://www.youtube.com/watch?v=T5pdU0s4J6w&t=1994s\n**/\n\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n\n@Component({\n    selector: 'app-quotes',\n    templateUrl: './quotes.page.html',\n    styleUrls: ['./quotes.page.scss'],\n})\nexport class QuotesPage implements OnInit {\n\n    //Declaration of the variables that will be used in the class  \n    //quotes is the variable where the elements from the API will be stored\n    quotes: Observable<any>;\n    //quotesId will be the variable to store the Id of each quote\n    quotesId: Observable<any>;\n    //in the array quoteItem the quotes will be stored in a new array\n    quoteItem: any[] = [];\n    //mySearch is the variable where the input from the user will be stored when a search is being done\n    mySearch = '';\n\n    constructor(private router: Router, private api: ApiService, /*private filter: FilterPipe*/) {\n    }\n\n    ngOnInit() {\n        this.loadQuotes();\n        //initialize loadDeaths Method\n\n        // this.quotes = this.api.getQuotes();\n        // this.quotes.subscribe(data => {console.log('my data' , data);\n        // });\n\n    }\n\n    //The method will call the elements from the getCharacters method declared in \n    //the api service and will store these elements in an array called quoteItem\n    loadQuotes() {\n        this.quotes = this.api.getQuotes();\n        this.quotes.subscribe(data => {\n            this.quoteItem = [data];\n            //console.log( data); \n        });\n    }\n\n    //In this method the attribute event will be taken to start the search\n    // according with what is written by the user in the search \n    searchQuote(event) {\n        const text = event.target.value;\n        this.mySearch = text;\n\n        //return(text.toLowerCase().indexOf(text.toLowerCase())>-1);\n\n\n        //show the results in the console\n        // console.log(text);\n    }\n\n    //Method to go to the details page of the quote selected by the user with a click\n    openDetails(quotes) {\n        let quotesId = quotes.quote_id;\n        this.router.navigateByUrl(`/tabs/quotes/${quotesId}`);\n    }\n}\n"],"sourceRoot":"webpack:///","file":"quotes-quotes-module-es5.js"}